---
8021x: 802.1X is a network authentication protocol that opens ports for network access
       when an organization authenticates a user’s identity and authorizes them for access
       to the network. The user’s identity is determined based on their credentials or
       certificate, which is confirmed by the RADIUS server. The RADIUS server is able to
       do this by communicating with the organization’s directory, typically over the LDAP or SAML protocol.
dhcp :
  - discover: 0.0.0.0 68 to 255.255.255.255 67
  - offer: sip 67 to 255.255.255.255 68
  - request: 0.0.0.0 68 255.255.255 67(unicast in renew,broadcast in rebinding)
  - ack: sip 67 to 255.255.255.255 68
ndp:
  - icmpv6: 133 Router Solicitation (RS),134 Router Advertisement (RA),Type 135 Neighbor Solicitation (NS),136 Neighbor Advertisement (NA)
  - process: https://blog.apnic.net/2019/10/18/how-to-ipv6-neighbor-discovery/

q1: what is the window size....how is it negotiated if it is?
  answer: local buffer,it does not negosiate ,it just used its own buffer
q2: how window size coreelates with segment size.. what is the role os mss in it?
  answer: segment is from mss ,mss is to avoid the fragment the MSS announcement (often mistakenly called a negotiation) is sent during the three-way handshake by both sides saying I can accept TCP segments up to size x”. The size (x) may be larger or smaller than the default.
The MSS can be used completely independently in each direction of data flow.

q3: if window size is 16kb then how many segments will it send can client say 16 kb and server say 32 kb?

q4: Fragmentation in detail
 answer: https://en.wikipedia.org/wiki/IP_fragmentation

path mtu trace in detail
...
single area ospf possible without area 0?
>it is ok

how to avoid being a bgp transit?   prefex list or no-export or dont advertise isp routes at all...right answer.... Is... No export option

mpls ldp neigborship in too much detail

Bgp states in detail.... Also what happens after open confirm done?... Immediately established state or some more stuff happens etc
Idle State:
 - 1: Refuse all incoming BGP connections.
 - 2: Start the initialization of event triggers.
 - 3: Initiates a TCP connection with its configured BGP peer.
 - 4: Listens for a TCP connection from its peer.
 - 5: Changes its state to Connect.
If an error occurs at any state of the FSM process, the BGP session is terminated immediately and returned to the Idle state. Some of the reasons why a router does not progress from the Idle state are:
TCP port 179 is not open.
A random TCP port over 1023 is not open.
Peer address configured incorrectly on either router.
AS number configured incorrectly on either router.
Connect State:
Waits for successful TCP negotiation with peer.
BGP does not spend much time in this state if the TCP session has been successfully established.
Sends Open message to peer and changes state to OpenSent.
If an error occurs, BGP moves to the Active state. Some reasons for the error are:
TCP port 179 is not open.
A random TCP port over 1023 is not open.
Peer address configured incorrectly on either router.
AS number configured incorrectly on either router.
Active State:
If the router was unable to establish a successful TCP session, then it ends up in the Active state.
BGP FSM tries to restart another TCP session with the peer and, if successful, then it sends an Open message to the peer.
If it is unsuccessful again, the FSM is reset to the Idle state.
Repeated failures may result in a router cycling between the Idle and Active states. Some of the reasons for this include:
TCP port 179 is not open.
A random TCP port over 1023 is not open.
BGP configuration error.
Network congestion.
Flapping network interface.
OpenSent State:
BGP FSM listens for an Open message from its peer.
Once the message has been received, the router checks the validity of the Open message.
If there is an error it is because one of the fields in the Open message does not match between the peers, e.g., BGP version mismatch, the peering router expects a different My AS, etc. The router then sends a Notification message to the peer indicating why the error occurred.
If there is no error, a Keepalive message is sent, various timers are set and the state is changed to OpenConfirm.
OpenConfirm State:
The peer is listening for a Keepalive message from its peer.
If a Keepalive message is received and no timer has expired before reception of the Keepalive, BGP transitions to the Established state.
If a timer expires before a Keepalive message is received, or if an error condition occurs, the router transitions back to the Idle state.
Established State:
In this state, the peers send Update messages to exchange information about each route being advertised to the BGP peer.
If there is any error in the Update message then a Notification message is sent to the peer, and BGP transitions back to the Idle state.